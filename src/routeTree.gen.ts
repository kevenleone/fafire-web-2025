/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfessorsImport } from './routes/professors'
import { Route as DepartmentsImport } from './routes/departments'
import { Route as IndexImport } from './routes/index'
import { Route as CoursesIndexImport } from './routes/courses/index'
import { Route as AllocationIndexImport } from './routes/allocation/index'
import { Route as CoursesNewImport } from './routes/courses/new'
import { Route as AllocationNewImport } from './routes/allocation/new'
import { Route as CoursesIdEditImport } from './routes/courses/$id.edit'

// Create/Update Routes

const ProfessorsRoute = ProfessorsImport.update({
  id: '/professors',
  path: '/professors',
  getParentRoute: () => rootRoute,
} as any)

const DepartmentsRoute = DepartmentsImport.update({
  id: '/departments',
  path: '/departments',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CoursesIndexRoute = CoursesIndexImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => rootRoute,
} as any)

const AllocationIndexRoute = AllocationIndexImport.update({
  id: '/allocation/',
  path: '/allocation/',
  getParentRoute: () => rootRoute,
} as any)

const CoursesNewRoute = CoursesNewImport.update({
  id: '/courses/new',
  path: '/courses/new',
  getParentRoute: () => rootRoute,
} as any)

const AllocationNewRoute = AllocationNewImport.update({
  id: '/allocation/new',
  path: '/allocation/new',
  getParentRoute: () => rootRoute,
} as any)

const CoursesIdEditRoute = CoursesIdEditImport.update({
  id: '/courses/$id/edit',
  path: '/courses/$id/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/departments': {
      id: '/departments'
      path: '/departments'
      fullPath: '/departments'
      preLoaderRoute: typeof DepartmentsImport
      parentRoute: typeof rootRoute
    }
    '/professors': {
      id: '/professors'
      path: '/professors'
      fullPath: '/professors'
      preLoaderRoute: typeof ProfessorsImport
      parentRoute: typeof rootRoute
    }
    '/allocation/new': {
      id: '/allocation/new'
      path: '/allocation/new'
      fullPath: '/allocation/new'
      preLoaderRoute: typeof AllocationNewImport
      parentRoute: typeof rootRoute
    }
    '/courses/new': {
      id: '/courses/new'
      path: '/courses/new'
      fullPath: '/courses/new'
      preLoaderRoute: typeof CoursesNewImport
      parentRoute: typeof rootRoute
    }
    '/allocation/': {
      id: '/allocation/'
      path: '/allocation'
      fullPath: '/allocation'
      preLoaderRoute: typeof AllocationIndexImport
      parentRoute: typeof rootRoute
    }
    '/courses/': {
      id: '/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesIndexImport
      parentRoute: typeof rootRoute
    }
    '/courses/$id/edit': {
      id: '/courses/$id/edit'
      path: '/courses/$id/edit'
      fullPath: '/courses/$id/edit'
      preLoaderRoute: typeof CoursesIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/departments': typeof DepartmentsRoute
  '/professors': typeof ProfessorsRoute
  '/allocation/new': typeof AllocationNewRoute
  '/courses/new': typeof CoursesNewRoute
  '/allocation': typeof AllocationIndexRoute
  '/courses': typeof CoursesIndexRoute
  '/courses/$id/edit': typeof CoursesIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/departments': typeof DepartmentsRoute
  '/professors': typeof ProfessorsRoute
  '/allocation/new': typeof AllocationNewRoute
  '/courses/new': typeof CoursesNewRoute
  '/allocation': typeof AllocationIndexRoute
  '/courses': typeof CoursesIndexRoute
  '/courses/$id/edit': typeof CoursesIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/departments': typeof DepartmentsRoute
  '/professors': typeof ProfessorsRoute
  '/allocation/new': typeof AllocationNewRoute
  '/courses/new': typeof CoursesNewRoute
  '/allocation/': typeof AllocationIndexRoute
  '/courses/': typeof CoursesIndexRoute
  '/courses/$id/edit': typeof CoursesIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/departments'
    | '/professors'
    | '/allocation/new'
    | '/courses/new'
    | '/allocation'
    | '/courses'
    | '/courses/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/departments'
    | '/professors'
    | '/allocation/new'
    | '/courses/new'
    | '/allocation'
    | '/courses'
    | '/courses/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/departments'
    | '/professors'
    | '/allocation/new'
    | '/courses/new'
    | '/allocation/'
    | '/courses/'
    | '/courses/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DepartmentsRoute: typeof DepartmentsRoute
  ProfessorsRoute: typeof ProfessorsRoute
  AllocationNewRoute: typeof AllocationNewRoute
  CoursesNewRoute: typeof CoursesNewRoute
  AllocationIndexRoute: typeof AllocationIndexRoute
  CoursesIndexRoute: typeof CoursesIndexRoute
  CoursesIdEditRoute: typeof CoursesIdEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DepartmentsRoute: DepartmentsRoute,
  ProfessorsRoute: ProfessorsRoute,
  AllocationNewRoute: AllocationNewRoute,
  CoursesNewRoute: CoursesNewRoute,
  AllocationIndexRoute: AllocationIndexRoute,
  CoursesIndexRoute: CoursesIndexRoute,
  CoursesIdEditRoute: CoursesIdEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/departments",
        "/professors",
        "/allocation/new",
        "/courses/new",
        "/allocation/",
        "/courses/",
        "/courses/$id/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/departments": {
      "filePath": "departments.tsx"
    },
    "/professors": {
      "filePath": "professors.tsx"
    },
    "/allocation/new": {
      "filePath": "allocation/new.tsx"
    },
    "/courses/new": {
      "filePath": "courses/new.tsx"
    },
    "/allocation/": {
      "filePath": "allocation/index.tsx"
    },
    "/courses/": {
      "filePath": "courses/index.tsx"
    },
    "/courses/$id/edit": {
      "filePath": "courses/$id.edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
